;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; FOL version 2.001
;; This file is an FOL source file: proof.hgk
;; Date: Wed Oct 20 10:47:31 MET 1993
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                                                          ;;
;;   Copyright (c) 1986-1987 by Richard Weyhrauch.  All rights reserved.    ;;
;;   Copyright (c) 1987-1988 by Fausto Giunchiglia.  All rights reserved.   ;;
;;                                                                          ;;
;;   This software is being provided to you, the LICENSEE, by Richard       ;;
;;   Weyhrauch and Fausto Giunchiglia, the AUTHORS, under certain rights    ;;
;;   and obligations.  By obtaining, using and/or copying this software,    ;;
;;   you indicate that you have read, understood, and will comply with      ;;
;;   the following terms and conditions:                                    ;;
;;                                                                          ;;
;;   THE AUTHORS MAKE NO REPRESENTATIONS OF WARRANTIES, EXPRESS OR          ;;
;;   IMPLIED.  By way of example, but not limitation, THE AUTHORS MAKE      ;;
;;   NO REPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OF FITNESS FOR     ;;
;;   ANY PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE        ;;
;;   COMPONENTS OR DOCUMENTATION WILL NOT INFRINGE ANY PATENTS,             ;;
;;   COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.                                ;;
;;                                                                          ;;
;;   The AUTHORS shall not be held liable for any direct, indirect or       ;;
;;   consequential damages with respect to any claim by LICENSEE or any     ;;
;;   third party on account of or arising from this Agreement or use of     ;;
;;   this software.  Permission to use, copy, modify and distribute this    ;;
;;   software and its documentation for any purpose and without fee or      ;;
;;   royalty is hereby granted, provided that the above copyright notice    ;;
;;   and disclaimer appears in and on ALL copies of the software and        ;;
;;   documentation, whether original to the AUTHORS or a modified           ;;
;;   version by LICENSEE.                                                   ;;
;;                                                                          ;;
;;   The name of the AUTHORS may not be used in advertising or publicity    ;;
;;   pertaining to distribution of the software without specific, written   ;;
;;   prior permission.  Notice must be given in supporting documentation    ;;
;;   that such distribution is by permission of the AUTHORS.  The AUTHORS   ;;
;;   make no representations about the suitability of this software for     ;;
;;   any purpose.  It is provided "AS IS" without express or implied        ;;
;;   warranty.  Title to copyright to this software and to any associated   ;;
;;   documentation shall at all times remain with the AUTHORS and LICENSEE  ;;
;;   agrees to preserve same.  LICENSEE agrees to place the appropriate     ;;
;;   copyright notice on any such copies.                                   ;;
;;                                                                          ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; +                                                               +
; + This file is supposed to contain all the code necessary to    +
; + elementary and non elementary management of proofs.           +
; +                                                               +
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; +                                                               +
; +  Here is the code for proof (prf) switching                   +
; +                                                               +
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


;; Non elementary view of proofs
;
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; +                                                               +
; + code for the building of the structures needed in order to    +
; + make the proof-switching inside a context                     +
; +                                                               +
; + NOTE: The structure for memorizing  a proof when switching    +
; +       proof is the same used for memorizing the current proof +
; +       when switching context.                                 +
; +       Consequently the code for building CURPROOF uses part   +
; +       the code used for building the proof structure          +
; +                                                               +
; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


;;;    %PLIST%
;
; *****************************************************************
; *                                                               *
; *   SYNTAX                                                      *
; *    (plist-get)                                                *
; *    (plist-set)                                                *
; *    (plist-del)                                                *
; *    (plist-ini)                                                *
; *                                                               *
; *****************************************************************
;
(DEFSUB plist-get () %PLIST%)
(DEFSUB plist-set (PROOFS) (SETQ %PLIST% PROOFS))
(DEFSUB plist-del () (SETQ %PLIST% MTL))
(DEFSUB plist-ini () (SETQ %PLIST% MTL))


;;;  makers and getters for %PLIST%
;
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (plist-get-proof PNAME)                                  *
; *      (plist-set-proof PROOF)                                  *
; *                                                               *
; * DESCRIPTION                                                   *
; *      (plist-get-proof PNAME)                                  *
; *      gets the proof of pname PNAME from %PLIST%.              *
; *                                                               *
; *      (plist-set-proof PROOF)                                  *
; *      puts PROOF in %PLIST%.                                   *
; *      If %PLIST% contains a proof of the same pname as         *
; *      the pname of PROOF, then                                 *
; *      (plist-set-proof PROOF) replaces the proof by PROOF.     *
; *                                                               *
; *****************************************************************
;
(DEFSUB plist-get-proof (PNAME) (HGKM-ASSOC PNAME %PLIST%))

(DEFSUB plist-set-proof (PROOF) 
 (SETQ %PLIST% (HGKM-REPLACE 
    (proof-get-pname PROOF) (LIST (proof-get-prf PROOF)) %PLIST%)) )


;;;    PROOF 
;
; *****************************************************************
; *                                                               *
; *     Any <proof>, both those contained in %PLIST% and the non  *
; *     elementary version of the current one, contains two parts *
; *                                                               *
; *     <proof>                                                   *
; *        PNAME    the name of the proof                         *
; *        PRF      the proof itself                              *
; *                                                               *
; *****************************************************************
;
;;;      the constructor and selectors of <proof>'s
;
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (proof-mak PNAME PRF)                                    *
; *      (proof-get-pname  PRF)                                   *
; *      (proof-get-prf    PRF)                                   *
; *                                                               *
; *****************************************************************
;
(DEFSUB proof-mak (PNAME PRF) (LIST PNAME PRF) )
(DEFSUB proof-get-pname  (PRF) (FIRST PRF))
(DEFSUB proof-get-prf   (PROOF) (SECOND PROOF))


; PRF
;
; *****************************************************************
; *                                                               *
; *     PRF, the real proof contains the following information:   *
; *                                                               *
; *        LLIST    the lines of the proof                        *
; *        NLINE    the next available line number                *
; *        ELIST    the current dependency list                   *
; *        EXISTE   Keeps open EE-rules                           *
; *        LABEL    takes the value of CURLABEL                   *
; *                                                               *
; *****************************************************************
;
; constructor and selectors
;
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (prf-mak LLIST NLINE ELIST EXISTE LABEL)                 *
; *      (prf-get-llist  PRF)                                     *
; *      (prf-get-nline  PRF)                                     *
; *      (prf-get-elist  PRF)                                     *
; *      (prf-get-existe PRF)                                     *
; *      (prf-get-label  PRF)                                     *
; *                                                               *
; *****************************************************************
;
(DEFSUB prf-mak (LLIST NLINE ELIST EXISTE LABEL) 
                    (LIST LLIST NLINE ELIST EXISTE LABEL))

(DEFSUB prf-get-llist  (PRF) (FIRST PRF))
(DEFSUB prf-get-nline  (PRF) (SECOND PRF))
(DEFSUB prf-get-elist  (PRF) (CADDR PRF))
(DEFSUB prf-get-existe (PRF) (CADDDR PRF))
(DEFSUB prf-get-label  (PRF) (HGKM-NTH 5 PRF))


;;Creation of the empty proofs
;
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (prf-mak-empty)                                          *
; *      (proof-mak-empty)                                        *
; *      (plist-mak-empty)                                        *
; *                                                               *
; *****************************************************************


(DEFSUB prf-mak-empty () (prf-mak MTL '1 FALSE MTL MTL))
(DEFSUB proof-mak-empty (PNAME) (proof-mak PNAME (prf-mak-empty))) 
(DEFSUB plist-mak-empty () MTL)


;;; checkers for proof names
;
; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *      (PROOF-NAME? X)                                          *        
; *                                                               *
; * DESCRIPTION                                                   *
; *      (PROOF-NAME? X) checks if X is a proof name or not.      *
; *                                                               *
; *****************************************************************
;
(DEFSUB PROOF-NAME? (X) (HGKM-ASSOC X %PLIST%) )


; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *  (CURPROOF-UNNAMED?)                                          *
; *                                                               *
; * DESCRIPTION                                                   *
; *  It checks if the current proof is unnamed                    *
; *                                                               *
; *****************************************************************
;
  (DEFSUB CURPROOF-UNNAMED? ()    (EQ (curpname-get) 'NOTNAMED&) )


; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *  (CURPROOF-NAME? PNAME)                                       *
; *                                                               *
; * DESCRIPTION                                                   *
; *  It checks if PNAME is the name of the current proof          *
; *                                                               *
; *****************************************************************
;
 (DEFSUB CURPROOF-NAME? (PNAME)  (EQ PNAME (curpname-get)) )


; *****************************************************************
; *                                                               *
; * SYNTAX                                                        *
; *  (PROOF-UNNAMED? PNAME)                                       *
; *                                                               *
; * DESCRIPTION                                                   *
; *  It checks if PNAME is the name of the unnamed proof          *
; *                                                               *
; *****************************************************************
;
(DEFSUB PROOF-UNNAMED? (PNAME) (EQ PNAME 'NOTNAMED&))

